<launch>


    <!-- Start the actual move_group node/action server -->
    <node name="move_group" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen"
          args="debug := true">
        <!-- Set the display variable, in case OpenGL code is used internally -->
        <!--        <env name="DISPLAY" value="$(optenv DISPLAY :0)" />-->

        <!--        <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>-->
        <!--        <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>-->
        <!--        <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />-->
        <param name="planning_plugin" value="ompl_interface/OMPLPlanner"/>
        <param name="request_adapters" value="default_planner_request_adapters/AddTimeParameterization
				       default_planner_request_adapters/FixWorkspaceBounds
				       default_planner_request_adapters/FixStartStateBounds
				       default_planner_request_adapters/FixStartStateCollision
				       default_planner_request_adapters/FixStartStatePathConstraints"/>

        <rosparam>
            moveit_controller_manager: moveit_simple_controller_manager/MoveItSimpleControllerManager
            controller_list:
                -   name: drone_controller
                    action_ns: drone_controller
                    type: MultiDofFollowJointTrajectory
                    default: true
                    joints:
                        - world_joint
            sensors:
                -   sensor_plugin: occupancy_map_monitor/PointCloudOctomapUpdater
                    point_cloud_topic: /drone/front/points
                    queue_size: 5
                    max_update_rate: 0.2
                    octomap_frame: map
                    octomap_resolution: 0.1
                    joint_limits:
                    world_joint:
                    has_velocity_limits: true
                    max_velocity: 0.1
                    has_acceleration_limits: true
                    max_acceleration: 0.1
        </rosparam>

        <!--        &lt;!&ndash; Publish the planning scene of the physical robot so that rviz plugin can know actual robot &ndash;&gt;-->
        <param name="planning_scene_monitor/publish_planning_scene" value="true"/>
        <param name="planning_scene_monitor/publish_geometry_updates" value="true"/>
        <param name="planning_scene_monitor/publish_state_updates" value="true"/>
        <param name="planning_scene_monitor/publish_transforms_updates" value="true"/>

    </node>

    <node name="dummy_joint_publisher" pkg="treebot" type="dummy_joint_messages"/>
</launch>